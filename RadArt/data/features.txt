radar:
 - RadarPointCloud.kX
 - RadarPointCloud.kY
 - RadarPointCloud.kZ
 - RadarPointCloud.kAbsoluteRadialVelocity
 - RadarPointCloud.kRadarCrossSection
 - RadarPointCloud.kRelativeRadialVelocity
 - RadarPointCloud.kRelativeLateralVelocity
 - RadarPointCloud.kRange
 - RadarPointCloud.kDistanceAccuracy
 - RadarPointCloud.kAngleAccuracy
 - RadarPointCloud.kDynProp
 - RadarPointCloud.kHasQuality
 - RadarPointCloud.kQPDH0
 - RadarPointCloud.kQDistLongRMS
 - RadarPointCloud.kQDistLatRMS
 - RadarPointCloud.kQVLongRMS
 - RadarPointCloud.kQVLatRMS
 - RadarPointCloud.kQAmbigState
 - RadarPointCloud.kQInvalidState
 - (radar_point_ts - lidar_ts), (s)
 - radar_idx

# Names of fields in PointCloud2 radar data

# coordinates
# (FLOAT32, m)
string kX = x
string kY = y
string kZ = z


# (FLOAT32, m/s)
string kRelativeRadialVelocity = obj_vrel_long
string kAbsoluteRadialVelocity = radial_speed_absolute

# (FLOAT32, m/s)
string kRelativeLateralVelocity = obj_lat_speed

# (FLOAT32, dBsm)
string kRadarCrossSection = obj_rcs_value

# whether point is from far or near scan clusters (0 - far, 1 - near)
# (UINT8, 0|1)
string kRange = range
uint8 kRangeNear = 0
uint8 kRangeFar = 1

# (FLOAT32, m)
string kDistanceAccuracy = distance_accuracy

# (FLOAT32, rad)
string kAngleAccuracy = angle_accuracy

# Dynamic property of cluster to indicate if it is moving or not (enum kDynProp*)
string kDynProp = dyn_prop
uint8 kDynPropMoving = 0
uint8 kDynPropStationary = 1
uint8 kDynPropOncoming = 2
uint8 kDynPropStationaryCandidate = 3
uint8 kDynPropUnknown = 4
uint8 kDynPropCrossingStationary = 5
uint8 kDynPropCrossingMoving = 6
uint8 kDynPropStopped = 7

# Whether quality fields (kQ*) are set (UINT8, 0|1)
string kHasQuality = has_quality

# False alarm probability of Cluster
# (i.e. probability for being an artefact caused by multipath or similar)
# (FLOAT32, 0..1)
string kQPDH0 = pdh0

# Standard deviation of longitudinal distance (FLOAT32, m)
string kQDistLongRMS = dist_long_rms

# Standard deviation of lateral distance (FLOAT32, m)
string kQDistLatRMS = dist_lat_rms

# Standard deviation of longitudinal relative velocity, (FLOAT32, m/s)
string kQVLongRMS = v_long_rms

# Standard deviation of lateral relative velocity (FLOAT32, m/s)
string kQVLatRMS = v_lat_rms

# State of Doppler (radial velocity) ambiguity solution (INT8, enum kQAmbigState*)
string kQAmbigState = ambig
int8 kQAmbigStateUnknown = -1  # Quality data not available
int8 kQAmbigStateInvalid = 0
int8 kQAmbigStateAmbiguous = 1
int8 kQAmbigStateStaggeredRamp = 2
int8 kQAmbigStateUnambiguous = 3
int8 kQAmbigStateStationaryCandidate = 4

# State of Cluster validity state (INT8, enum kQInvalidState*)
string kQInvalidState = invalid
int8 kQInvalidStateUnknown = -1  # Quality data not available
int8 kQInvalidStateValid = 0  # Valid
int8 kQInvalidStateLowRCSInvalid = 1  # Invalid due to low RCS
int8 kQInvalidStateNearFieldArtifact = 2  # Invalid due to near-field artefact
int8 kQInvalidStateUnconfirmed = 3  # Invalid far range Cluster because not confirmed in near range
int8 kQInvalidStateLowRCSValid = 4  # Valid Cluster with low RCS
int8 kQInvalidStateReserved1 = 5  # reserved
int8 kQInvalidStateMirror = 6  # Invalid Cluster due to high mirror probability
int8 kQInvalidStateOutOfFov = 7  # Invalid because outside sensor field of view
int8 kQInvalidStateCorrectedAzimuth = 8  # Valid Cluster with azimuth correction due to elevation
int8 kQInvalidStateChild = 9  # Valid Cluster with high child probability
int8 kQInvalidStateEdgeArtifact = 10  # Valid Cluster with high probability of being a 50 deg artefact
int8 kQInvalidStateNotMaximum = 11  # Valid Cluster but no local maximum
int8 kQInvalidStateArtifact = 12  # Valid Cluster with high artefact probability
int8 kQInvalidStateReserved2 = 13  # reserved
int8 kQInvalidStateHarmonics = 14  # Invalid Cluster because it is a harmonics
int8 kQInvalidStateFarCluster = 15  # Valid Cluster above 95 m in near range
int8 kQInvalidStateMultitarget = 16  # Valid Cluster with high multi-target probability
int8 kQInvalidStateSuspiciousAngle = 17  # Valid Cluster with suspicious angle


lidar:
 - x, (m)
 - y, (m)
 - z, (m)
 - r, (reflectance)
 - lidar_ring
